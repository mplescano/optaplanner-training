<?xml version="1.0" encoding="UTF-8"?>
<solver>
  <!--<environmentMode>FAST_ASSERT</environmentMode>-->
  <scanAnnotatedClasses/>

  <scoreDirectorFactory>
    <easyScoreCalculatorClass>org.optaplanner.training.election.solver.ElectionEasyScoreCalculator</easyScoreCalculatorClass>
    <!-- Alternative implementation: -->
    <!--<incrementalScoreCalculatorClass>org.optaplanner.training.election.optional.solver.ElectionIncrementalScoreCalculator</incrementalScoreCalculatorClass>-->
  </scoreDirectorFactory>

  <termination>
    <unimprovedSecondsSpentLimit>10</unimprovedSecondsSpentLimit>
  </termination>

  <!-- Optimization algorithms configuration -->
  <constructionHeuristic/>
  <localSearch>
    <unionMoveSelector>
      <changeMoveSelector/>
      <swapMoveSelector/>
      <!-- To escape the local optimum in this knapsack variant, add pillar swap moves to swap 2 sets of states. -->
      <pillarSwapMoveSelector/>
    </unionMoveSelector>
  </localSearch>
</solver>
